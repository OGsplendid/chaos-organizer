{"version":3,"file":"main.js","mappings":"yBAAe,MAAMA,EACnB,iBAAOC,CAAWC,GAChB,MAAO,0CAEDA,uBAGR,ECLa,MAAMC,EACnB,WAAAC,GACEC,KAAKC,aAAe,IAAIN,CAC1B,CAsBA,qBAAOO,CAAeL,GACpB,MAAO,CACLA,UAEJ,EC/Ba,MAAMM,EAInB,aAAOC,GACL,MAAO,kQAOT,ECZa,MAAMC,EACnB,WAAAN,CAAYO,GACVN,KAAKM,SAAWA,CAClB,CAEA,aAAOF,GACL,MAAO,+WAYT,ECda,MAAMG,EACnB,WAAAR,CAAYO,GACVN,KAAKM,SAAWA,EAChBN,KAAKQ,SAAW,EAClB,CAEA,aAAOJ,GACL,MAAO,oCACT,CAEA,SAAAK,GACE,MAAMC,EAAOH,EAAIH,SACjBJ,KAAKM,SAASK,mBAAmB,aAAcD,GAC/CV,KAAKY,QAAUZ,KAAKM,SAASO,cAAc,mBAE3Cb,KAAKc,UAAY,IAAIT,EACrB,MAAMU,EAAgBV,EAAUD,SAChCJ,KAAKY,QAAQD,mBAAmB,aAAcI,GAE9Cf,KAAKgB,KAAO,IAAIlB,EAChB,MAAMmB,EAAWnB,EAAKM,SACtBJ,KAAKY,QAAQD,mBAAmB,YAAaM,GAE7CjB,KAAKkB,MAAQ,IAAIf,EACjB,MAAMgB,EAAYhB,EAAMC,SACxBJ,KAAKY,QAAQD,mBAAmB,YAAaQ,EAC/C,EC3BU,IAAIZ,EAAIa,SAASP,cAAc,eACvCJ,W","sources":["webpack://chaos-organizer/./src/components/desk/MessageMaker.js","webpack://chaos-organizer/./src/components/desk/Desk.js","webpack://chaos-organizer/./src/components/input/Input.js","webpack://chaos-organizer/./src/components/organizer/Organizer.js","webpack://chaos-organizer/./src/components/app/App.js","webpack://chaos-organizer/./src/js/app.js"],"sourcesContent":["export default class MessageMaker {\n  static renderText(message) {\n    return `\n      <div class=\"message\">\n        ${message}\n      </div>\n    `;\n  }\n}\n","import MessageMaker from './MessageMaker';\n\nexport default class Desk {\n  constructor() {\n    this.messageMaker = new MessageMaker();\n  }\n\n  // static render() {\n  //   return `\n  //     <div class=\"desk-wrapper\">\n  //       <div class=\"message\">\n  //         sdlkjfasldkjflasjdf;dsf\n  //       </div>\n  //       <div class=\"message\">\n  //       <p>\n  //         sdlkjfasldkjflasjdf;dsf\n  //  <a href='#'>http://dfgfd.com</a>\n  //          dsaf\n  //         dsaf\n  //         sadfdsafadsfdsf\n  //         sdgds\n  //       </p>\n  //       </div>\n  //     </div>\n  //   `;\n  // }\n\n  static formMessageObj(message) {\n    return {\n      message,\n    };\n  }\n}\n\n// const str = 'sdfkjl 1dsk 2ksldfj 3sldfj 2sdlkfj';\n// const arr = str.split(' ');\n// for (let i = 0; i < arr.length; i++) {\n//   if (arr[i].startsWith('2')) {\n//     const withLink = `<a href=${arr[i]}>${arr[i]}</a>`;\n//     arr[i] = withLink;\n//   }\n// }\n// const result = arr.join(' ');\n// console.log(result);\n","export default class Input {\n  // constructor() {\n  // }\n\n  static render() {\n    return `\n      <form class=\"input-wrapper\">\n        <button type=\"button\" class=\"emoji-button\"></button>\n        <textarea class=\"input\" rows=\"5\" placeholder=\"Type here\"></textarea>\n        <button type=\"text\" class=\"send-button\"></button>\n      </form>\n    `;\n  }\n}\n","export default class Organizer {\n  constructor(parentEl) {\n    this.parentEl = parentEl;\n  }\n\n  static render() {\n    return `\n      <div class=\"organizer-wrapper\">\n        <div class=\"logo\">\n          <h2 class=\"logo-text\">Chaos Organizer</h2>\n        </div>\n        <div class=\"buttons-wrapper\">\n          <button class=\"search-button\"></button>\n          <button class=\"attach-button\"></button>\n          <button class=\"others-button\"></button>\n        </div>\n      </div>\n    `;\n  }\n}\n","import Desk from '../desk/Desk';\nimport Input from '../input/Input';\nimport Organizer from '../organizer/Organizer';\n\nexport default class App {\n  constructor(parentEl) {\n    this.parentEl = parentEl;\n    this.messages = [];\n  }\n\n  static render() {\n    return '<div class=\"common-wrapper\"></div>';\n  }\n\n  bindToDom() {\n    const html = App.render();\n    this.parentEl.insertAdjacentHTML('afterbegin', html);\n    this.wrapper = this.parentEl.querySelector('.common-wrapper');\n\n    this.organizer = new Organizer();\n    const organizerHTML = Organizer.render();\n    this.wrapper.insertAdjacentHTML('afterbegin', organizerHTML);\n\n    this.desk = new Desk();\n    const deskHTML = Desk.render();\n    this.wrapper.insertAdjacentHTML('beforeend', deskHTML);\n\n    this.input = new Input();\n    const inputHTML = Input.render();\n    this.wrapper.insertAdjacentHTML('beforeend', inputHTML);\n  }\n}\n\n// export default class App {\n//   constructor(parentElement) {\n//     this.parentElement = parentElement;\n//     this.wrapper = this.parentElement.querySelector('.wrapper');\n//     this.ticketHandler = new TicketHandler();\n//     this.popupCreator = new PopupCreator(this.parentElement);\n//     this.addTicketBtn = this.wrapper.querySelector('.add-new-ticket');\n\n//     this.pullTickets = this.pullTickets.bind(this);\n//     this.createTicket = this.createTicket.bind(this);\n//     this.updateTicket = this.updateTicket.bind(this);\n//     this.deleteTicket = this.deleteTicket.bind(this);\n//     this.showDetails = this.showDetails.bind(this);\n//     this.toggleItemStatus = this.toggleItemStatus.bind(this);\n\n//     document.addEventListener('DOMContentLoaded', this.pullTickets);\n//     this.wrapper.addEventListener('click', this.toggleItemStatus);\n//     this.addTicketBtn.addEventListener('click', this.createTicket);\n//     this.wrapper.addEventListener('click', this.updateTicket);\n//     this.wrapper.addEventListener('click', this.deleteTicket);\n//     this.wrapper.addEventListener('click', this.showDetails);\n//   }\n\n//   toggleItemStatus(e) {\n//     if (!e.target.classList.contains('checkbox')) return;\n//     const ticketID = e.target.closest('li').getAttribute('data-id');\n//     e.target.classList.toggle('task-done');\n//     if (e.target.classList.contains('task-done')) {\n//       this.handleRequest('POST', `updateById&id=${ticketID}`, ticketID, true);\n//     } else {\n//       this.handleRequest('POST', `updateById&id=${ticketID}`, ticketID, false);\n//     }\n//     this.pullTickets();\n//   }\n\n//   async pullTickets() {\n//     const tickets = this.wrapper.querySelectorAll('li');\n//     tickets.forEach((item) => item.remove());\n//     const reply = await this.handleRequest('GET', 'allTickets');\n//     const parsedReply = JSON.parse(reply);\n//     parsedReply.forEach((item) => {\n//       let doneClass;\n//       if (item.status) {\n//         doneClass = 'task-done';\n//       } else {\n//         doneClass = null;\n//       }\n//       this.ticketHandler.add(item.id, item.name, item.created, doneClass);\n//     });\n//   }\n\n//   async deleteTicket(e) {\n//     if (!e.target.classList.contains('delete-item')) return;\n//     const ticketID = e.target.closest('.list-item').getAttribute('data-id');\n//     this.popupCreator.show('delete');\n//     const deleteBtn = document.querySelector('.popup-save-button');\n//   }\n\n//   async showDetails(e) {\n//     if (!e.target.classList.contains('short-description-wrapper')) return;\n//     const ticketID = e.target.closest('.list-item').getAttribute('data-id');\n//     const data = await this.handleRequest('GET', `ticketById&id=${ticketID}`);\n//     const parsedData = JSON.parse(data);\n//     const shortDescription = parsedData.name;\n//     const fullDescription = parsedData.description;\n//     if (!fullDescription) return;\n//     const li = e.target.closest('li');\n//     const descriptionArea = li.querySelector('.short-description-wrapper');\n//     if (li.classList.contains('full')) {\n//       descriptionArea.textContent = shortDescription;\n//       li.classList.toggle('full');\n//       return;\n//     }\n//     descriptionArea.insertAdjacentHTML('beforeend', `<br><br>${fullDescription}`);\n//     li.classList.toggle('full');\n//   }\n\n//   createTicket() {\n//     this.popupCreator.show('Добавить');\n\n//     const saveBtn = document.querySelector('.popup-save-button');\n//     saveBtn.addEventListener('click', async () => {\n//       await this.handleRequest('POST', 'createTicket', null);\n//       this.pullTickets();\n//     });\n//   }\n\n//   async updateTicket(e) {\n//     if (!e.target.classList.contains('change-item')) return;\n//     const li = e.target.closest('li');\n//     const ticketID = li.getAttribute('data-id');\n//     const data = await this.handleRequest('GET', `ticketById&id=${ticketID}`);\n//     const parsedData = JSON.parse(data);\n//     const shortDescription = parsedData.name;\n//     const fullDescription = parsedData.description;\n//     this.popupCreator.show('Изменить');\n//     const saveBtn = document.querySelector('.popup-save-button');\n//     this.parentElement.querySelector('.input-description').value = shortDescription;\n//     this.parentElement.querySelector('.input-full-description').value = fullDescription;\n//     saveBtn.addEventListener('click', async () => {\n//       await this.handleRequest('POST', `updateById&id=${ticketID}`, ticketID);\n//       this.pullTickets();\n//     });\n//   }\n\n//   async handleRequest(method, ending, id, status) {\n//     if (method === 'GET') {\n//       try {\n//         const response = await fetch(`http://localhost:7070?method=${ending}`, {\n//           method,\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//         });\n//         const json = await response.json();\n//         return JSON.stringify(json);\n//       } catch (error) {\n//         console.error('Ошибка:', error);\n//       }\n//     } else {\n//       let shortDescription;\n//       let fullDescription;\n//       let obj = {\n//         id,\n//         name: shortDescription,\n//         description: fullDescription,\n//         status,\n//       };\n//       try {\n//         shortDescription = this.parentElement.querySelector('.input-description').value;\n//         fullDescription = this.parentElement.querySelector('.input-full-description').value;\n//       } catch (err) {\n//         obj = {\n//           id,\n//           status,\n//         };\n//       }\n//       try {\n//         const response = await fetch(`http://localhost:7070?method=${ending}`, {\n//           method: 'POST',\n//           body: JSON.stringify(obj),\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//         });\n//         const json = await response.json();\n//       } catch (error) {\n//         console.error('Ошибка:', error);\n//       }\n//     }\n//     return null;\n//   }\n// }\n","import '../css/style.css';\nimport App from '../components/app/App';\n\nconst app = new App(document.querySelector('.container'));\napp.bindToDom();\n"],"names":["MessageMaker","renderText","message","Desk","constructor","this","messageMaker","formMessageObj","Input","render","Organizer","parentEl","App","messages","bindToDom","html","insertAdjacentHTML","wrapper","querySelector","organizer","organizerHTML","desk","deskHTML","input","inputHTML","document"],"sourceRoot":""}