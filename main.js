!function(){"use strict";class t{constructor(t){this.url=t}async get(t){const e=await fetch(`${this.url}/notes/?startingIndex=${t}`);return 400===e.status||this.finished?null:await e.json()}async getNew(){const t=await fetch(`${this.url}/note`);return await t.json()}async post(t){return(await fetch(`${this.url}/notes`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})).status}async delete(t){return(await fetch(`${this.url}/notes/${t}`,{method:"DELETE"})).status}}class e{constructor(t){this.parentEl=t}static getHTML(t){return'\n      <dialog class="popup">\n        <div class="popup-wrapper">\n          <h3 class="popup-title"></h3>\n          <div class="popup-buttons">\n            <button class="yes">Yes</button>\n            <button class="no">No</button>\n          </div>\n        </div>\n      </dialog>\n    '}showUp(t){const s=e.getHTML(t);this.parentEl.insertAdjacentHTML("afterbegin",s)}closeDown(){this.parentEl.querySelector(".popup-wrapper").remove()}}const s=t=>{switch(t){case"image/bmp":case"image/gif":case"image/jpeg":case"image/png":case"image/svg+xml":case"image/tiff":return"image";default:return"file"}};class n{static createMessageObj(t){if("text"===t.type){const e=(t=>{const e=t.split(" ");for(let t=0;t<e.length;t+=1)if(e[t].startsWith("http://")||e[t].startsWith("https://")){const s=`<a href="${e[t]}">${e[t]}</a>`;e[t]=s}return e.join(" ")})(t.text);return{type:t.type,content:{text:e}}}return"image"===t.type||"file"===t.type?{type:t.type,content:{text:t.name,link:t.link}}:"undefined"}static createTextMessage(t){const{content:e}=t;return`\n      <div data-id="${t.id}" class="text-message message">\n        <p>${e.text}</p>\n        <button class="message-options-btn"></button>\n      </div>\n    `}static createFileMessage(t){const{content:e}=t;return`\n      <div data-link=${e.link} data-id="${t.id}" class="file-message message">\n        <h5 class='file-name'>${e.text}</h5>\n        <img src='../../../icons8-file-80.png' />\n        <button class="message-options-btn"></button>\n      </div>\n    `}static createImgMessage(t){const{content:e}=t;return`\n      <div data-link=${e.link} data-id="${t.id}" class="img-message message">\n        <h5 class='file-name'>${e.text}</h5>\n        <img class="src" src=${e.link} />\n        <button class="message-options-btn"></button>\n      </div>\n    `}static createMessageOptions(t){return t?'\n        <div class="message-options-wrapper">\n          <button class="message-options-delete">Delete</button>\n          <button class="message-options-download">Download</button>\n        </div>\n      ':'\n      <div class="message-options-wrapper">\n        <button class="message-options-delete">Delete</button>\n      </div>\n    '}}class i{constructor(t){this.parentEl=t,this.messageMaker=new n}static get html(){return'\n        <div class="desk-wrapper">\n          <div id="top-scroll" class="top-scroll"></div>\n        </div>\n    '}bindToDOM(){const t=i.html;this.parentEl.insertAdjacentHTML("afterbegin",t),this.wrapper=this.parentEl.querySelector(".desk-wrapper"),this.popup=new e(document.body),this.bindEvents()}bindEvents(){this.onDragLeave=this.onDragLeave.bind(this),this.onDragOver=this.onDragOver.bind(this),this.wrapper.addEventListener("dragleave",this.onDragLeave),this.wrapper.addEventListener("dragover",this.onDragOver)}onDragLeave(t){this.wrapper.classList.remove("ondrag")}onDragOver(t){t.preventDefault(),this.wrapper.classList.add("ondrag")}clear(){this.wrapper.querySelectorAll(".message").forEach((t=>t.remove()))}render(t){this.clear(),t.forEach((t=>{let e;"text"===t.type&&(e=n.createTextMessage(t)),"file"===t.type&&(e=n.createFileMessage(t)),"image"===t.type&&(e=n.createImgMessage(t)),this.wrapper.querySelector(".top-scroll").insertAdjacentHTML("beforebegin",e)}))}}class a{constructor(t){this.parentEl=t}static get html(){return'\n      <form class="input-wrapper">\n        <button type="button" class="emoji-button"></button>\n        <textarea class="input" rows="5" placeholder="Type here"></textarea>\n        <button type="button" class="options-button"></button>\n        <button type="submit" class="send-button"></button>\n        <div class="options hidden">\n          <button class="geolocation">Send Geolocation</button>\n          <button class="notification">Send Notification</button>\n        </div>\n      </form>\n    '}bindToDOM(){const t=a.html;this.parentEl.insertAdjacentHTML("afterbegin",t),this.wrapper=this.parentEl.querySelector(".input-wrapper"),this.optionsBtn=this.wrapper.querySelector(".options-button"),this.options=this.wrapper.querySelector(".options"),this.bindEvents()}bindEvents(){this.onOptionsClick=this.onOptionsClick.bind(this),this.optionsBtn.addEventListener("click",this.onOptionsClick)}onOptionsClick(){this.options.classList.toggle("hidden")}}class r{constructor(t){this.parentEl=t}static get html(){return'\n      <div class="organizer-wrapper">\n        <div class="logo">\n          <h2 class="logo-text">Chaos Organizer</h2>\n        </div>\n        <input name="search-input" class="search-input hidden" placeholder="Type your query here" />\n        <div class="buttons-wrapper">\n          <div class="button-container">\n            <button class="search-button"></button>\n          </div>\n          <div class="button-container">\n            <button class="attach-button"></button>\n            <input type="file" name="file" class="file-input" id="file" />\n          </div>\n          <div class="button-container">\n            <button class="others-button"></button>\n          </div>\n        </div>\n      </div>\n    '}bindToDOM(){const t=r.html;this.parentEl.insertAdjacentHTML("afterbegin",t),this.wrapper=this.parentEl.querySelector(".organizer-wrapper"),this.searchButton=this.wrapper.querySelector(".search-button"),this.attachButton=this.wrapper.querySelector(".attach-button"),this.othersButton=this.wrapper.querySelector(".others-button"),this.searchInput=this.wrapper.querySelector(".search-input")}bindEvents(){this.toggleSearchInput=this.toggleSearchInput.bind(this),this.attachButton.addEventListener("click",(()=>{this.fileInput.dispatchEvent(new MouseEvent("click"))}))}toggleSearchInput(){this.searchInput.value="",this.searchInput.classList.toggle("hidden")}}class o{constructor(e){this.parentEl=e,this.server=new t("http://localhost:7070"),this.messages=[],this.isLoading=!1}static get html(){return'<div class="common-wrapper"></div>'}bindToDom(){const t=o.html;this.parentEl.insertAdjacentHTML("afterbegin",t),this.wrapper=this.parentEl.querySelector(".common-wrapper"),this.inputController=new a(this.wrapper),this.inputController.bindToDOM(),this.desk=new i(this.wrapper),this.desk.bindToDOM(),this.organizer=new r(this.wrapper),this.organizer.bindToDOM(),this.bindElements(),this.bindEvents()}bindElements(){this.searchButton=this.wrapper.querySelector(".search-button"),this.attachButton=this.wrapper.querySelector(".attach-button"),this.othersButton=this.wrapper.querySelector(".others-button"),this.fileInput=this.wrapper.querySelector(".file-input"),this.emojiBtn=this.wrapper.querySelector(".emoji-button"),this.geolocationBtn=this.wrapper.querySelector(".geolocation"),this.inputForm=this.wrapper.querySelector(".input-wrapper"),this.deskWrapper=this.wrapper.querySelector(".desk-wrapper"),this.topScroll=this.wrapper.querySelector(".top-scroll"),this.bottomScroll=this.wrapper.querySelector(".bottom-scroll"),this.sendBtn=this.wrapper.querySelector(".send-button"),this.organizerWrapper=this.wrapper.querySelector(".organizer-wrapper")}bindEvents(){this.handleFileInputChange=this.handleFileInputChange.bind(this),this.loadOnScroll=this.loadOnScroll.bind(this),this.handleSendMessage=this.handleSendMessage.bind(this),this.checkLoadingNecessity=this.checkLoadingNecessity.bind(this),this.onDrop=this.onDrop.bind(this),this.toggleMessageOptions=this.toggleMessageOptions.bind(this),this.onOptionsClick=this.onOptionsClick.bind(this),this.onSearchClick=this.onSearchClick.bind(this),this.onSearchInputChange=this.onSearchInputChange.bind(this),this.loadOnChange=this.loadOnChange.bind(this),this.store=this.store.bind(this),this.restore=this.restore.bind(this),this.onGeolocationClick=this.onGeolocationClick.bind(this),this.handleSendCoords=this.handleSendCoords.bind(this),this.attachButton.addEventListener("click",(()=>{this.fileInput.dispatchEvent(new MouseEvent("click"))})),this.fileInput.addEventListener("change",this.handleFileInputChange),this.searchButton.addEventListener("click",this.onSearchClick),window.addEventListener("storage",this.restore),document.addEventListener("DOMContentLoaded",this.restore),this.deskWrapper.addEventListener("scroll",this.checkLoadingNecessity),this.deskWrapper.addEventListener("resize",this.checkLoadingNecessity),this.inputForm.addEventListener("submit",this.handleSendMessage),this.deskWrapper.addEventListener("drop",this.onDrop),this.wrapper.addEventListener("click",this.toggleMessageOptions),this.geolocationBtn.addEventListener("click",this.onGeolocationClick)}store(){localStorage.setItem("messages",JSON.stringify(this.messages))}restore(){this.messages=JSON.parse(localStorage.getItem("messages")),this.desk.render(this.messages)}async loadOnScroll(){this.isLoading=!0;const t=await this.server.get(this.messages.length);t&&(this.messages=[...this.messages,...t],this.store(),this.desk.render(this.messages),setTimeout((()=>{this.isLoading=!1}),500))}checkLoadingNecessity(){document.getElementById("top-scroll").getBoundingClientRect().bottom>-100&&!this.isLoading&&this.loadOnScroll()}async loadOnChange(t=!1){if(t){const t=await this.server.getNew();if(!t)return;this.messages=[t,...this.messages]}this.store(),this.desk.render(this.messages)}onSearchClick(){this.organizer.toggleSearchInput();const t=this.organizerWrapper.querySelector(".search-input");t.focus(),t.classList.contains("hidden")&&this.desk.render(this.messages),t.addEventListener("input",this.onSearchInputChange),window.addEventListener("keydown",(t=>{"Escape"===t.code&&(this.organizer.toggleSearchInput(),this.desk.render(this.messages))}))}onSearchInputChange(t){const e=t.target.value.toLowerCase();e.trim()||this.desk.render(this.messages);const s=this.messages.filter((t=>t.content.text.toLowerCase().includes(e)));this.desk.render(s)}onDrop(t){t.preventDefault(),this.deskWrapper.classList.remove("ondrag");const e=t.dataTransfer.files&&t.dataTransfer.files[0],i=s(e.type),a=new FileReader;a.readAsDataURL(e),a.addEventListener("load",(async t=>{const s=t.target.result,a={type:i,name:e.name,link:s},r=n.createMessageObj(a);204===await this.server.post(r)&&this.loadOnChange(!0)}))}handleFileInputChange(){const t=this.fileInput.files&&this.fileInput.files[0];if(!t)return;const e=s(t.type),i=new FileReader;i.readAsDataURL(t),i.addEventListener("load",(async s=>{const i=s.target.result,a={type:e,name:t.name,link:i},r=n.createMessageObj(a);204===await this.server.post(r)&&this.loadOnChange(!0)}))}async handleSendMessage(t){t.preventDefault();const e=this.wrapper.querySelector(".input").value;if(!e.trim())return;if(e.trim().startsWith("@schedule"))return this.scheduleNotification(e),void this.inputForm.reset();const s={type:"text",text:e},i=n.createMessageObj(s);204===await this.server.post(i)&&(this.inputForm.reset(),this.loadOnChange(!0))}toggleMessageOptions(t){if(t.target.classList.contains("message-options-btn")&&t.target.closest(".message").classList.contains("onedit")){const e=t.target.closest(".message");return e.classList.remove("onedit"),e.querySelector(".message-options-wrapper").removeEventListener("click",this.onOptionsClick),void e.querySelector(".message-options-wrapper").remove()}const e=[...this.deskWrapper.querySelectorAll(".message")];if(e.length&&(e.forEach((t=>{t.classList.remove("onedit");const e=t.querySelector(".message-options-wrapper");e&&(e.removeEventListener("click",this.onOptionsClick),e.remove())})),t.target.classList.contains("message-options-btn"))){const e=t.target.closest(".message");let s;s=e.classList.contains("text-message")?n.createMessageOptions(!1):n.createMessageOptions(!0),e.classList.add("onedit"),e.insertAdjacentHTML("beforeend",s),e.querySelector(".message-options-wrapper").addEventListener("click",this.onOptionsClick)}}async onOptionsClick(t){const e=t.target.closest(".message").getAttribute("data-id");if(t.target.classList.contains("message-options-delete")&&204===await this.server.delete(e)){const t=this.messages.findIndex((t=>t.id===Number(e)));this.messages.splice(t,1),this.loadOnChange()}t.target.classList.contains("message-options-download")&&((t,e)=>{const s=document.createElement("a");s.href=t,s.rel="noopener",s.download=e,s.click()})(t.target.closest(".message").getAttribute("data-link"),t.target.closest(".message").querySelector(".file-name").textContent)}onGeolocationClick(){navigator.geolocation&&navigator.geolocation.getCurrentPosition((t=>{this.handleSendCoords(t)}),(t=>{console.log(t)}),{enableHighAccuracy:!0})}async handleSendCoords(t){const{latitude:e,longitude:s}=await t.coords,i={type:"text",text:`${e}, ${s}`},a=n.createMessageObj(i);204===await this.server.post(a)&&(this.inputForm.reset(),this.loadOnChange(!0))}}new o(document.getElementById("root")).bindToDom()}();
//# sourceMappingURL=main.js.map